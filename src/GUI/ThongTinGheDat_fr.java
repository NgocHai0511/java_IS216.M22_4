
package GUI;

import ConnectDB.OracleConnection;
import static GUI.ThongTinVeDat_fr.MKHHT;
import java.awt.Color;
import java.sql.Connection;
import java.util.ArrayList;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import javax.swing.JOptionPane;

/**
 *
 * @author TIEN NHAN
 */
public class ThongTinGheDat_fr extends javax.swing.JFrame {
    static String MKHHT=null;
    DefaultTableModel tbLT;
    DefaultTableModel tbG;
    private boolean flag = false;
    private int k = 0;
    public ArrayList<String> matau = new ArrayList<String>();
    public ArrayList<String> maLT2 = new ArrayList<String>();
    public ArrayList<String> ghedachon = new ArrayList<String>();
    public ArrayList<Integer> slghechdat = new ArrayList<>();
    /**
     * Creates new form TTGheDat
     */
    public ThongTinGheDat_fr() {
        initComponents();
        tbLT = (DefaultTableModel) jTable1.getModel();
        tbG = (DefaultTableModel) jTable2.getModel();
        setAllButtonClose();
        setVisible(true);
    }
    
    public void set_MKHHT(String a){
        MKHHT=a;            
    }
    
    public ArrayList<String> listmaTau(String a){
        matau.add(a);
        return matau;
    }
    
    public double Laythanhtien(String matau){
        double thanhtien = 0;
        OracleConnection OC = new OracleConnection();
        Connection conn = null;
        try{
            conn = OC.getOracleConnection();
            String SQL = "SELECT GIATIEN FROM GHE WHERE MATAU LIKE ?";
            PreparedStatement pres = conn.prepareStatement(SQL);
            pres.setString(1, '%'+matau+'%');
            ResultSet rs = pres.executeQuery();
            if(rs.next()) thanhtien = rs.getDouble(1);
        }catch (Exception e){
            e.printStackTrace();
        }
        return thanhtien;  
    }
    
    public ArrayList<String> listmaLT(String a){
        maLT2.add(a);
        return maLT2;
    }
    
    public void tongGheChChon(int sl){
        slghechdat.add(sl);
    }
    
    public JTable gettbLichTrinh(){
        return jTable1;
    }
    
    public void setButtonO(){
        jButton2.setEnabled(true);
        jButton3.setEnabled(true);
        jButton4.setEnabled(true);
        jButton5.setEnabled(true);
        jButton6.setEnabled(true);
        jButton7.setEnabled(true);
        jButton8.setEnabled(true);
        jButton9.setEnabled(true);
        jButton10.setEnabled(true);
    }
    
    public void setAllButtonClose(){
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
        jButton4.setEnabled(false);
        jButton5.setEnabled(false);
        jButton6.setEnabled(false);
        jButton7.setEnabled(false);
        jButton8.setEnabled(false);
        jButton9.setEnabled(false);
        jButton10.setEnabled(false);
    }
    
    public void removeAllColorButton(){
        jButton2.setBackground(Color.LIGHT_GRAY);
        jButton3.setBackground(Color.LIGHT_GRAY);
        jButton4.setBackground(Color.LIGHT_GRAY);
        jButton5.setBackground(Color.LIGHT_GRAY);
        jButton6.setBackground(Color.LIGHT_GRAY);
        jButton7.setBackground(Color.LIGHT_GRAY);
        jButton8.setBackground(Color.LIGHT_GRAY);
        jButton9.setBackground(Color.LIGHT_GRAY);
        jButton10.setBackground(Color.LIGHT_GRAY);
    }
    
    public void setButtonC(ArrayList<String> a){
        for(int i = 0 ; i < a.size(); i++){
            if(a.get(i).equals("GHE01")) jButton2.setEnabled(false);
            if(a.get(i).equals("GHE02")) jButton3.setEnabled(false);
            if(a.get(i).equals("GHE03")) jButton4.setEnabled(false);
            if(a.get(i).equals("GHE04")) jButton5.setEnabled(false);
            if(a.get(i).equals("GHE05")) jButton6.setEnabled(false);
            if(a.get(i).equals("GHE06")) jButton7.setEnabled(false);
            if(a.get(i).equals("GHE07")) jButton8.setEnabled(false);
            if(a.get(i).equals("GHE08")) jButton9.setEnabled(false);
            if(a.get(i).equals("GHE09")) jButton10.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton11 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(51, 204, 255));
        jPanel1.setForeground(new java.awt.Color(255, 153, 153));

        jButton2.setText("Ghế 1");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Ghế 2");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Ghế 3");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Ghế 4");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Ghế 5");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Ghế 6");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Ghế 7");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Ghế 8");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Ghế 9");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton8)
                            .addComponent(jButton5)
                            .addComponent(jButton2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jButton9)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jButton6)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButton7)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(119, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8)
                    .addComponent(jButton9)
                    .addComponent(jButton10))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(748, 101, 385, -1));

        jTable2.setBackground(new java.awt.Color(204, 204, 255));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã lịch trình", "Mã tàu", "Tên tàu", "Loại tàu", "Tên ghế", "Mã ghế", "Thành tiền"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 430, 1118, 163));

        jButton11.setBackground(new java.awt.Color(255, 153, 0));
        jButton11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton11.setForeground(new java.awt.Color(255, 255, 255));
        jButton11.setText("Xác nhận đặt vé");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(382, 620, -1, -1));

        jButton1.setBackground(new java.awt.Color(255, 153, 0));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Hủy");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(675, 620, -1, -1));

        jTable1.setBackground(new java.awt.Color(204, 204, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã lịch trình", "Ga khởi hành", "Ga đến", "Tên tàu", "Loại tàu", "Ngày khởi hành", "Giờ khởi hành", "Số ghế trống"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 692, 211));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(667, 6, 127, 27));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 17)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 51));
        jLabel5.setText("Thông Tin Lịch Trình");
        jLabel5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 204, 204), 1, true));
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(271, 47, 191, -1));

        jLabel4.setBackground(new java.awt.Color(0, 255, 255));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 17)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 51));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Thông tin ghế đặt");
        jLabel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 204, 204), 1, true));
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(838, 47, 193, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 51));
        jLabel6.setText("Thông tin các ghế đã được chọn");
        jLabel6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 204, 204), 1, true));
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 390, 290, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PIC_ICON/nen_all.png"))); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1190, 690));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        tbLT = (DefaultTableModel) jTable1.getModel();
        tbG = (DefaultTableModel) jTable2.getModel();
        if(jButton2.getBackground() == Color.CYAN){
            jButton2.setBackground(Color.LIGHT_GRAY);
            for(int j=0; j< jTable1.getRowCount(); j++){
                if(jLabel1.getText().equals(tbLT.getValueAt(j, 0))){
                    int slg = (int)tbLT.getValueAt(j, 7) + 1;
                    tbLT.setValueAt(slg, j, 7);
                }            
            }
            for(int i = 0; i < tbG.getRowCount(); i++){
                if(tbG.getValueAt(i, 5).equals("GHE01")) tbG.removeRow(i);
            }
        } else {
            jButton2.setBackground(Color.CYAN);
            String tentau = "";
            String loaitau = "";
            for(int k = 0; k < jTable1.getRowCount(); k++){
                if(jLabel1.getText().equals(tbLT.getValueAt(k, 0))){
                    tentau = tbLT.getValueAt(k, 3).toString();
                    loaitau = tbLT.getValueAt(k, 3).toString();
                }
            }
            tbG.addRow(new Object[] {jLabel1.getText(),jLabel2.getText(),tentau,loaitau,jButton2.getText(),"GHE01",Laythanhtien(jLabel2.getText())});
            for(int j=0; j< jTable1.getRowCount(); j++){
                if(jLabel1.getText().equals(tbLT.getValueAt(j, 0))){
                    int slg = (int)tbLT.getValueAt(j, 7) - 1;
                    tbLT.setValueAt(slg, j, 7);
                }            
            }
        }
        
        if(tbG.getRowCount() > 3){
            JOptionPane.showMessageDialog(null, "Số lượng ghế đặt không được quá 3!", "ERROR", JOptionPane.ERROR_MESSAGE);
            jButton2.setBackground(Color.LIGHT_GRAY);
            int row = tbG.getRowCount();
            tbG.removeRow(row - 1);
            for(int j=0; j< jTable1.getRowCount(); j++){
                if(jLabel1.getText().equals(tbLT.getValueAt(j, 0))){
                    int slg = (int)tbLT.getValueAt(j, 7) + 1;
                    tbLT.setValueAt(slg, j, 7);
                }            
            }
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        tbLT = (DefaultTableModel) jTable1.getModel();
        tbG = (DefaultTableModel) jTable2.getModel();
        if(jButton3.getBackground() == Color.CYAN){
            jButton3.setBackground(Color.LIGHT_GRAY);
            for(int j=0; j< jTable1.getRowCount(); j++){
                if(jLabel1.getText().equals(tbLT.getValueAt(j, 0))){
                    int slg = (int)tbLT.getValueAt(j, 7) + 1;
                    tbLT.setValueAt(slg, j, 7);
                }            
            }
            for(int i = 0; i < tbG.getRowCount(); i++){
                if(tbG.getValueAt(i, 5).equals("GHE02")) tbG.removeRow(i);
            }
        } else {
            jButton3.setBackground(Color.CYAN);
            String tentau = "";
            String loaitau = "";
            for(int k = 0; k < jTable1.getRowCount(); k++){
                if(jLabel1.getText().equals(tbLT.getValueAt(k, 0))){
                    tentau = tbLT.getValueAt(k, 3).toString();
                    loaitau = tbLT.getValueAt(k, 3).toString();
                }
            }
            tbG.addRow(new Object[] {jLabel1.getText(),jLabel2.getText(),tentau,loaitau,jButton3.getText(),"GHE02",Laythanhtien(jLabel2.getText())});
            for(int j=0; j< jTable1.getRowCount(); j++){
                if(jLabel1.getText().equals(tbLT.getValueAt(j, 0))){
                    int slg = (int)tbLT.getValueAt(j, 7) - 1;
                    tbLT.setValueAt(slg, j, 7);
                }            
            }
        }
        
        if(tbG.getRowCount() > 3){
            JOptionPane.showMessageDialog(null, "Số lượng ghế đặt không được quá 3!", "ERROR", JOptionPane.ERROR_MESSAGE);
            jButton3.setBackground(Color.LIGHT_GRAY);
            int row = tbG.getRowCount();
            tbG.removeRow(row - 1);
            for(int j=0; j< jTable1.getRowCount(); j++){
                if(jLabel1.getText().equals(tbLT.getValueAt(j, 0))){
                    int slg = (int)tbLT.getValueAt(j, 7) + 1;
                    tbLT.setValueAt(slg, j, 7);
                }            
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        tbLT = (DefaultTableModel) jTable1.getModel();
        tbG = (DefaultTableModel) jTable2.getModel();
        if(jButton4.getBackground() == Color.CYAN){
            jButton4.setBackground(Color.LIGHT_GRAY);
            for(int j=0; j< jTable1.getRowCount(); j++){
                if(jLabel1.getText().equals(tbLT.getValueAt(j, 0))){
                    int slg = (int)tbLT.getValueAt(j, 7) + 1;
                    tbLT.setValueAt(slg, j, 7);
                }            
            }
            for(int i = 0; i < tbG.getRowCount(); i++){
                if(tbG.getValueAt(i, 5).equals("GHE03")) tbG.removeRow(i);
            }
        } else {
            jButton4.setBackground(Color.CYAN);
            String tentau = "";
            String loaitau = "";
            for(int k = 0; k < jTable1.getRowCount(); k++){
                if(jLabel1.getText().equals(tbLT.getValueAt(k, 0))){
                    tentau = tbLT.getValueAt(k, 3).toString();
                    loaitau = tbLT.getValueAt(k, 3).toString();
                }
            }
            tbG.addRow(new Object[] {jLabel1.getText(),jLabel2.getText(),tentau,loaitau,jButton4.getText(),"GHE03",Laythanhtien(jLabel2.getText())});
            for(int j=0; j< jTable1.getRowCount(); j++){
                if(jLabel1.getText().equals(tbLT.getValueAt(j, 0))){
                    int slg = (int)tbLT.getValueAt(j, 7) - 1;
                    tbLT.setValueAt(slg, j, 7);
                }            
            }
        }
        
        if(tbG.getRowCount() > 3){
            JOptionPane.showMessageDialog(null, "Số lượng ghế đặt không được quá 3!", "ERROR", JOptionPane.ERROR_MESSAGE);
            jButton4.setBackground(Color.LIGHT_GRAY);
            int row = tbG.getRowCount();
            tbG.removeRow(row - 1);
            for(int j=0; j< jTable1.getRowCount(); j++){
                if(jLabel1.getText().equals(tbLT.getValueAt(j, 0))){
                    int slg = (int)tbLT.getValueAt(j, 7) + 1;
                    tbLT.setValueAt(slg, j, 7);
                }            
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        if(tbG.getRowCount()==0){
            JOptionPane.showMessageDialog(null, "Bạn cần chọn ghế!", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        double tongtien = 0;
        String gkh = "";
        tbG = (DefaultTableModel) jTable2.getModel();
        tbLT = (DefaultTableModel) jTable1.getModel();
        for (int i= 0; i < tbG.getRowCount(); i++){
            tongtien = tongtien + Double.parseDouble(tbG.getValueAt(i, 6).toString());
        }
        
        for (int i= 0; i < tbLT.getRowCount(); i++){
            if(tbG.getValueAt(0, 0).equals(tbLT.getValueAt(i, 0))){
                gkh = tbLT.getValueAt(i, 6).toString();
            }
        }
        
        OracleConnection OC = new OracleConnection();
        Connection conn = null;
        try{
            conn = OC.getOracleConnection();
            ThongTinVeDat_fr ctve = new ThongTinVeDat_fr();           
            if(MKHHT != null){
                ctve.set_MKHHT(MKHHT);
                ctve.getTextFieldKH().setText(MKHHT);
                ctve.getTTKH(MKHHT);
                ctve.getTextFieldKH().setEditable(false);
            }            
            ctve.TongTien(tongtien);
            DefaultTableModel tbctVe = (DefaultTableModel) ctve.gettbCTVe().getModel();
            
            for(int i = 0; i < tbG.getRowCount(); i++){
                ctve.dsmaGhe(tbG.getValueAt(i, 5).toString());
                ctve.getMaTau(tbG.getValueAt(i, 1).toString());
                tbctVe.addRow(new Object[] {
                    i+1,tbG.getValueAt(i, 0),tbLT.getValueAt(0, 1),tbLT.getValueAt(0, 2),tbLT.getValueAt(0, 5),gkh,tbG.getValueAt(i, 2),tbG.getValueAt(i, 4),tbG.getValueAt(i, 6)
                });
            }
            this.dispose();
            
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        DatVe_fr a = new DatVe_fr();
        a.set_MKHHT(MKHHT);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        ghedachon.removeAll(ghedachon);
        setButtonO();
        tbG = (DefaultTableModel) jTable2.getModel();
        tbLT = (DefaultTableModel) jTable1.getModel();
        int indexTB = jTable1.getSelectedRow();
        if(jLabel1.getText().equals("")){
            jLabel1.setText(tbLT.getValueAt(indexTB, 0).toString());
            jLabel2.setText(matau.get(indexTB));
        } else{
            if(jLabel1.getText().equals(tbLT.getValueAt(indexTB, 0).toString()) == false && tbG.getRowCount() > 0){
                int ret = JOptionPane.showConfirmDialog(null, "Bạn chỉ có thể đặt vé trong một lịch trình. Có muốn xóa toàn bộ ghế đã đặt", "Cảnh báo", JOptionPane.YES_NO_OPTION);           
                if (ret == JOptionPane.YES_OPTION){
                    for(int i=0; i <tbLT.getRowCount(); i++){
                        if(jLabel1.getText().equals(tbLT.getValueAt(i, 0).toString())){
                            tbLT.setValueAt(slghechdat.get(i), i, 7);
                        }
                    }
                    jLabel1.setText(tbLT.getValueAt(indexTB, 0).toString());
                    jLabel2.setText(matau.get(indexTB));
                    tbG.setRowCount(0);
                    removeAllColorButton();   
            }      
            }
            if(tbG.getRowCount() == 0){
                jLabel1.setText(tbLT.getValueAt(indexTB, 0).toString());
                jLabel2.setText(matau.get(indexTB));
            }
            
        }
        
        if (indexTB >= 0 && indexTB < jTable1.getRowCount()){
            OracleConnection OC = new OracleConnection();
            Connection conn = null;
            try{
                conn = OC.getOracleConnection();
                String SQL1 = "SELECT CTVE.MAGHE FROM LICHTRINH, VE, CTVE \n"
                        + "WHERE LICHTRINH.MALT = VE.MALT AND VE.MAVE = CTVE.MAVE AND LICHTRINH.MALT =?";
                PreparedStatement pres1 = conn.prepareStatement(SQL1);
                pres1.setString(1, maLT2.get(indexTB));
                ResultSet rs1 = pres1.executeQuery();
                while(rs1.next()){
                    ghedachon.add(rs1.getString("MAGHE"));
                }
                setButtonC(ghedachon);
            }catch (Exception e){
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        tbLT = (DefaultTableModel) jTable1.getModel();
        tbG = (DefaultTableModel) jTable2.getModel();
        if(jButton5.getBackground() == Color.CYAN){
            jButton5.setBackground(Color.LIGHT_GRAY);
            for(int j=0; j< jTable1.getRowCount(); j++){
                if(jLabel1.getText().equals(tbLT.getValueAt(j, 0))){
                    int slg = (int)tbLT.getValueAt(j, 7) + 1;
                    tbLT.setValueAt(slg, j, 7);
                }            
            }
            for(int i = 0; i < tbG.getRowCount(); i++){
                if(tbG.getValueAt(i, 5).equals("GHE04")) tbG.removeRow(i);
            }
        } else {
            jButton5.setBackground(Color.CYAN);
            String tentau = "";
            String loaitau = "";
            for(int k = 0; k < jTable1.getRowCount(); k++){
                if(jLabel1.getText().equals(tbLT.getValueAt(k, 0))){
                    tentau = tbLT.getValueAt(k, 3).toString();
                    loaitau = tbLT.getValueAt(k, 3).toString();
                }
            }
            tbG.addRow(new Object[] {jLabel1.getText(),jLabel2.getText(),tentau,loaitau,jButton5.getText(),"GHE04",Laythanhtien(jLabel2.getText())});
            for(int j=0; j< jTable1.getRowCount(); j++){
                if(jLabel1.getText().equals(tbLT.getValueAt(j, 0))){
                    int slg = (int)tbLT.getValueAt(j, 7) - 1;
                    tbLT.setValueAt(slg, j, 7);
                }            
            }
        }
        
        if(tbG.getRowCount() > 3){
            JOptionPane.showMessageDialog(null, "Số lượng ghế đặt không được quá 3!", "ERROR", JOptionPane.ERROR_MESSAGE);
            jButton5.setBackground(Color.LIGHT_GRAY);
            int row = tbG.getRowCount();
            tbG.removeRow(row - 1);
            for(int j=0; j< jTable1.getRowCount(); j++){
                if(jLabel1.getText().equals(tbLT.getValueAt(j, 0))){
                    int slg = (int)tbLT.getValueAt(j, 7) + 1;
                    tbLT.setValueAt(slg, j, 7);
                }            
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        tbLT = (DefaultTableModel) jTable1.getModel();
        tbG = (DefaultTableModel) jTable2.getModel();
        if(jButton6.getBackground() == Color.CYAN){
            jButton6.setBackground(Color.LIGHT_GRAY);
            for(int j=0; j< jTable1.getRowCount(); j++){
                if(jLabel1.getText().equals(tbLT.getValueAt(j, 0))){
                    int slg = (int)tbLT.getValueAt(j, 7) + 1;
                    tbLT.setValueAt(slg, j, 7);
                }            
            }
            for(int i = 0; i < tbG.getRowCount(); i++){
                if(tbG.getValueAt(i, 5).equals("GHE05")) tbG.removeRow(i);
            }
        } else {
            jButton6.setBackground(Color.CYAN);
            String tentau = "";
            String loaitau = "";
            for(int k = 0; k < jTable1.getRowCount(); k++){
                if(jLabel1.getText().equals(tbLT.getValueAt(k, 0))){
                    tentau = tbLT.getValueAt(k, 3).toString();
                    loaitau = tbLT.getValueAt(k, 3).toString();
                }
            }
            tbG.addRow(new Object[] {jLabel1.getText(),jLabel2.getText(),tentau,loaitau,jButton6.getText(),"GHE05",Laythanhtien(jLabel2.getText())});
            for(int j=0; j< jTable1.getRowCount(); j++){
                if(jLabel1.getText().equals(tbLT.getValueAt(j, 0))){
                    int slg = (int)tbLT.getValueAt(j, 7) - 1;
                    tbLT.setValueAt(slg, j, 7);
                }            
            }
        }
        
        if(tbG.getRowCount() > 3){
            JOptionPane.showMessageDialog(null, "Số lượng ghế đặt không được quá 3!", "ERROR", JOptionPane.ERROR_MESSAGE);
            jButton6.setBackground(Color.LIGHT_GRAY);
            int row = tbG.getRowCount();
            tbG.removeRow(row - 1);
            for(int j=0; j< jTable1.getRowCount(); j++){
                if(jLabel1.getText().equals(tbLT.getValueAt(j, 0))){
                    int slg = (int)tbLT.getValueAt(j, 7) + 1;
                    tbLT.setValueAt(slg, j, 7);
                }            
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        tbLT = (DefaultTableModel) jTable1.getModel();
        tbG = (DefaultTableModel) jTable2.getModel();
        if(jButton7.getBackground() == Color.CYAN){
            jButton7.setBackground(Color.LIGHT_GRAY);
            for(int j=0; j< jTable1.getRowCount(); j++){
                if(jLabel1.getText().equals(tbLT.getValueAt(j, 0))){
                    int slg = (int)tbLT.getValueAt(j, 7) + 1;
                    tbLT.setValueAt(slg, j, 7);
                }            
            }
            for(int i = 0; i < tbG.getRowCount(); i++){
                if(tbG.getValueAt(i, 5).equals("GHE06")) tbG.removeRow(i);
            }
        } else {
            jButton7.setBackground(Color.CYAN);
            String tentau = "";
            String loaitau = "";
            for(int k = 0; k < jTable1.getRowCount(); k++){
                if(jLabel1.getText().equals(tbLT.getValueAt(k, 0))){
                    tentau = tbLT.getValueAt(k, 3).toString();
                    loaitau = tbLT.getValueAt(k, 3).toString();
                }
            }
            tbG.addRow(new Object[] {jLabel1.getText(),jLabel2.getText(),tentau,loaitau,jButton7.getText(),"GHE06",Laythanhtien(jLabel2.getText())});
            for(int j=0; j< jTable1.getRowCount(); j++){
                if(jLabel1.getText().equals(tbLT.getValueAt(j, 0))){
                    int slg = (int)tbLT.getValueAt(j, 7) - 1;
                    tbLT.setValueAt(slg, j, 7);
                }            
            }
        }
        
        if(tbG.getRowCount() > 3){
            JOptionPane.showMessageDialog(null, "Số lượng ghế đặt không được quá 3!", "ERROR", JOptionPane.ERROR_MESSAGE);
            jButton7.setBackground(Color.LIGHT_GRAY);
            int row = tbG.getRowCount();
            tbG.removeRow(row - 1);
            for(int j=0; j< jTable1.getRowCount(); j++){
                if(jLabel1.getText().equals(tbLT.getValueAt(j, 0))){
                    int slg = (int)tbLT.getValueAt(j, 7) + 1;
                    tbLT.setValueAt(slg, j, 7);
                }            
            }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        tbLT = (DefaultTableModel) jTable1.getModel();
        tbG = (DefaultTableModel) jTable2.getModel();
        if(jButton8.getBackground() == Color.CYAN){
            jButton8.setBackground(Color.LIGHT_GRAY);
            for(int j=0; j< jTable1.getRowCount(); j++){
                if(jLabel1.getText().equals(tbLT.getValueAt(j, 0))){
                    int slg = (int)tbLT.getValueAt(j, 7) + 1;
                    tbLT.setValueAt(slg, j, 7);
                }            
            }
            for(int i = 0; i < tbG.getRowCount(); i++){
                if(tbG.getValueAt(i, 5).equals("GHE07")) tbG.removeRow(i);
            }
        } else {
            jButton8.setBackground(Color.CYAN);
            String tentau = "";
            String loaitau = "";
            for(int k = 0; k < jTable1.getRowCount(); k++){
                if(jLabel1.getText().equals(tbLT.getValueAt(k, 0))){
                    tentau = tbLT.getValueAt(k, 3).toString();
                    loaitau = tbLT.getValueAt(k, 3).toString();
                }
            }
            tbG.addRow(new Object[] {jLabel1.getText(),jLabel2.getText(),tentau,loaitau,jButton8.getText(),"GHE07",Laythanhtien(jLabel2.getText())});
            for(int j=0; j< jTable1.getRowCount(); j++){
                if(jLabel1.getText().equals(tbLT.getValueAt(j, 0))){
                    int slg = (int)tbLT.getValueAt(j, 7) - 1;
                    tbLT.setValueAt(slg, j, 7);
                }            
            }
        }
        
        if(tbG.getRowCount() > 3){
            JOptionPane.showMessageDialog(null, "Số lượng ghế đặt không được quá 3!", "ERROR", JOptionPane.ERROR_MESSAGE);
            jButton8.setBackground(Color.LIGHT_GRAY);
            int row = tbG.getRowCount();
            tbG.removeRow(row - 1);
            for(int j=0; j< jTable1.getRowCount(); j++){
                if(jLabel1.getText().equals(tbLT.getValueAt(j, 0))){
                    int slg = (int)tbLT.getValueAt(j, 7) + 1;
                    tbLT.setValueAt(slg, j, 7);
                }            
            }
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        tbLT = (DefaultTableModel) jTable1.getModel();
        tbG = (DefaultTableModel) jTable2.getModel();
        if(jButton9.getBackground() == Color.CYAN){
            jButton9.setBackground(Color.LIGHT_GRAY);
            for(int j=0; j< jTable1.getRowCount(); j++){
                if(jLabel1.getText().equals(tbLT.getValueAt(j, 0))){
                    int slg = (int)tbLT.getValueAt(j, 7) + 1;
                    tbLT.setValueAt(slg, j, 7);
                }            
            }
            for(int i = 0; i < tbG.getRowCount(); i++){
                if(tbG.getValueAt(i, 5).equals("GHE08")) tbG.removeRow(i);
            }
        } else {
            jButton9.setBackground(Color.CYAN);
            String tentau = "";
            String loaitau = "";
            for(int k = 0; k < jTable1.getRowCount(); k++){
                if(jLabel1.getText().equals(tbLT.getValueAt(k, 0))){
                    tentau = tbLT.getValueAt(k, 3).toString();
                    loaitau = tbLT.getValueAt(k, 3).toString();
                }
            }
            tbG.addRow(new Object[] {jLabel1.getText(),jLabel2.getText(),tentau,loaitau,jButton9.getText(),"GHE08",Laythanhtien(jLabel2.getText())});
            for(int j=0; j< jTable1.getRowCount(); j++){
                if(jLabel1.getText().equals(tbLT.getValueAt(j, 0))){
                    int slg = (int)tbLT.getValueAt(j, 7) - 1;
                    tbLT.setValueAt(slg, j, 7);
                }            
            }
        }
        
        if(tbG.getRowCount() > 3){
            JOptionPane.showMessageDialog(null, "Số lượng ghế đặt không được quá 3!", "ERROR", JOptionPane.ERROR_MESSAGE);
            jButton9.setBackground(Color.LIGHT_GRAY);
            int row = tbG.getRowCount();
            tbG.removeRow(row - 1);
            for(int j=0; j< jTable1.getRowCount(); j++){
                if(jLabel1.getText().equals(tbLT.getValueAt(j, 0))){
                    int slg = (int)tbLT.getValueAt(j, 7) + 1;
                    tbLT.setValueAt(slg, j, 7);
                }            
            }
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        tbLT = (DefaultTableModel) jTable1.getModel();
        tbG = (DefaultTableModel) jTable2.getModel();
        if(jButton10.getBackground() == Color.CYAN){
            jButton10.setBackground(Color.LIGHT_GRAY);
            for(int j=0; j< jTable1.getRowCount(); j++){
                if(jLabel1.getText().equals(tbLT.getValueAt(j, 0))){
                    int slg = (int)tbLT.getValueAt(j, 7) + 1;
                    tbLT.setValueAt(slg, j, 7);
                }            
            }
            for(int i = 0; i < tbG.getRowCount(); i++){
                if(tbG.getValueAt(i, 5).equals("GHE09")) tbG.removeRow(i);
            }
        } else {
            jButton10.setBackground(Color.CYAN);
            String tentau = "";
            String loaitau = "";
            for(int k = 0; k < jTable1.getRowCount(); k++){
                if(jLabel1.getText().equals(tbLT.getValueAt(k, 0))){
                    tentau = tbLT.getValueAt(k, 3).toString();
                    loaitau = tbLT.getValueAt(k, 3).toString();
                }
            }
            tbG.addRow(new Object[] {jLabel1.getText(),jLabel2.getText(),tentau,loaitau,jButton10.getText(),"GHE09",Laythanhtien(jLabel2.getText())});
            for(int j=0; j< jTable1.getRowCount(); j++){
                if(jLabel1.getText().equals(tbLT.getValueAt(j, 0))){
                    int slg = (int)tbLT.getValueAt(j, 7) - 1;
                    tbLT.setValueAt(slg, j, 7);
                }            
            }
        }
        
        if(tbG.getRowCount() > 3){
            JOptionPane.showMessageDialog(null, "Số lượng ghế đặt không được quá 3!", "ERROR", JOptionPane.ERROR_MESSAGE);
            jButton10.setBackground(Color.LIGHT_GRAY);
            int row = tbG.getRowCount();
            tbG.removeRow(row - 1);
            for(int j=0; j< jTable1.getRowCount(); j++){
                if(jLabel1.getText().equals(tbLT.getValueAt(j, 0))){
                    int slg = (int)tbLT.getValueAt(j, 7) + 1;
                    tbLT.setValueAt(slg, j, 7);
                }            
            }
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThongTinGheDat_fr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThongTinGheDat_fr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThongTinGheDat_fr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThongTinGheDat_fr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThongTinGheDat_fr().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
